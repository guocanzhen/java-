一、基础

1、JDK是什么?JRE是什么?JVM是什么？
jdk是什么？
sdk（也就是jdk）是jre的超集，是在jre的基础上增加了编译器及其他一些开发工具。
jre是什么？
Java Runtime Environment (JRE) 包含：
Java虚拟机(JVM)、库函数、运行 Java 应用程序和 Applet 所必须文件。
jre就是java运行时环境，包括了jvm和其它一些java核心api,任何一台电脑，只有安装了jre才可以运行java程序。
JVM是什么?
JVM 是指在一台计算机上由软件或硬件模拟的计算机（Java虚拟机）；它类似一个小巧而高效的CPU。

2、Java标识符
1) 标识符可以由字母、数字、下划线（_）、美元符（$）组成，但不能包含 @、%、空格等其它特殊字符，不能以数字开头。譬如：111stu 就是不合法。
2) 标识符不能是 Java关键字和保留字（保留字即Java预留的关键字，以后的升级版本中有可能作为关键字），但可以包含关键字和保留字。如：不可以使用 void 作为标识符，但是 Stuvoid 可以。
3) 标识符是严格区分大小写的。并且没有长度限制的。
4) 标识符的命名最好能反映出其作用，做到见名知意。
5) Java 语言中有一些具有特殊用途的词被称为关键字。

3、Java数据类型 
1) Java的数据类型分为两大类：基本类型和引用类型
基本类型：
整数型：				字节		位
			byte		1			8
			shot		2			16
			int			4			32
			long		8			64
浮点型：
			float		4			32
			double		8			64
字符型：
			char		2			16
布尔型：
			boolean					1
精度：bigDecimal

4、Java字符串(String)
String 即可以用 String str= new String("abc");的形式来创建，也可以用String str ="abc"；的形式来创建。

String str = "abc"创建对象的过程：
1 首先在常量池中查找是否存在内容为”abc“的字符串对象
2 如果不存在则在常量池中创建一个”abc“的字符串对象，并让str引用该对象
3 如果存在则直接让 str 引用该对象
注意：常量池属于类信息的一部分，而类信息反映到 JVM 内存模型中是对应存在于 JVM 内存模型的方法区，也就是说这个类信息中的常量池概念是存在于在方法区中。
一般这种情况下，”abc“在编译时就被写入字节码中，所以 class 被加载时，JVM 就为”abc“在常量池中分配内存，所以和静态区差不多。

String str = new String("abc")创建实例的过程：
1首先定义一个str的String类型的引用并存放在栈中
2在字符串常量池中查看是否存在内容为"abc"字符串对象
3若存在则跳过这个步骤，若不存在，则在字符串常量池中创建一个内容为"abc"的字符串对象。
4执行new操作，在堆中创建一个指定的对象"abc"，这里堆的对象是字符串常量池“abc”对象的一个拷贝对象。
5让str指向堆中“abc”这个对象（也就是存储这个对象的在堆中的地址）

5、Java数组
Java 语言中提供的数组是用来存储固定大小的同类型元素。

6、java方法的重载
重载(overloading)是在一个类里面（或者子类），方法名字相同，而参数不同。返回类型可以相同也可以不同。每个重载的方法（或者构造方法）都必须有一个独一无二的参数类型列表。最常用的地方就是构造器的重载。
比较：
方法重写：方法重写可以用“一个前提、三个相同和两个规定”来总结，前提是在继承体系结构下，三个相同代表子类中定义的方法与父类中的方法，具有相同的名字、参数列表和返回值类型，两个规定分别是子类方法的范围限定不能比父类方法的范围小，以及不能抛出更多的异常。当然，final类型的方法和static类型的方法是不能被重写的。
方法重载和方法重写都属于java对象多态的概念解析。

7、Java面向对象
面向对象三大特征：封装（例：bean），继承，多态

Java之封装
在面向对象程式设计方法中，封装是指一种将抽象性函式接口的实现细节部份包装、隐藏起来的方法。
封装的优点：良好的封装能够减少耦合。类内部的结构可以自由修改。可以对成员变量进行更精确的控制。隐藏信息和实现细节。

继承的概念
继承是 java 面向对象编程技术的一块基石，因为它允许创建分等级层次的类。
继承就是子类继承父类的特征和行为，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类具有父类相同的行为。
子类拥有父类非private的属性，方法。子类可以拥有自己的属性和方法，即子类可以对父类进行扩展。子类可以用自己的方式实现父类的方法（即方法的重写）。
Java的继承是单继承，但是可以多重继承，单继承就是一个子类只能继承一个父类，多重继承就是，例如A类继承B类，B类继承C类，所以按照关系就是C类是B类的父类，B类是A类的父类，提高了类之间的耦合性（继承的缺点，耦合度高就会造成代码之间的联系）。

Java之多态
在 java 程序设计中，对象变量是多态的，多态是同一个行为具有多个不同表现形式或形态的能力。
也是 OOP （Object Oriented Programming）中的一个重要特性，主要是用来实现动态联编的，换句话说，就是程序的最终状态只有在执行过程中才被决定而非在编译期间就决定了。
多态性是对象多种表现形式的体现。就是同一个接口，使用不同的实例而执行不同操作。
多态存在的三个必要条件：继承、重写、父类引用指向子类对象。

8、Java之访问修饰符
Java 支持 4 种不同的访问权限。
public : 对所有类可见。使用对象：类、接口、变量、方法（同类、同包、子类、通用性）
protected : 对同一包内的类和所有子类可见。使用对象：变量、方法。注意：不能修饰类（外部类）。（同类、同包、子类）
default (即缺省，什么也不写）: 在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。（同类、同包）
private : 在同一类内可见。使用对象：变量、方法。 注意：不能修饰类（外部类）（同类）

9、Java之非访问修饰符

10、



