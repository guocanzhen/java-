泛型：

早期的Object类型可以接收任意的对象类型，但是在实际的使用中，在运行阶段会有类型转换的问题。也就存在这隐患，所以Java提供了泛型来解决这个安全问题。
泛型：是一种把明确类型的工作推迟到创建对象或者调用方法的时候才去明确的特殊的类型。也就是说在泛型使用过程中，操作的数据类型被指定为一个参数，而这种参数类型可以用在类、方法和接口中，分别被称为泛型类、泛型方法、泛型接口。
1、泛型类：在创建对象的时候确定泛型。
2、泛型方法：是在调用方法的时候指明泛型的具体类型 。
3、泛型接口：泛型接口常被用在各种类的生产器中。
定义类时确定泛型的类型
始终不确定泛型的类型，直到创建对象时，确定泛型的类型
4、泛型通配符：不知道使用什么类型来接收的时候,此时可以使用?,?表示未知通配符。
注意：泛型不存在继承、多态关系,泛型左右两边要一样
5、通配符高级使用
JAVA的泛型中可以指定一个泛型的上限和下限。
上限：类型名称 <? extends 类 > 对象名称  -- 只能接收该类型及其子类
下限：类型名称 <? super 类 > 对象名称 -- 只能接收该类型及其父类型