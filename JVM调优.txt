JVM调优：

任何语言“编译”成class都可以用jvm。
JRE = jvm + core lib
JDK = jre + development kit
1、类加载：类加载+链接+初始化，其中链接：验证+准备+解析
2、类加载器
（1）双亲委派机制：加载类过程：加载器看自己的缓存里有没有加载过，没有则在问父加载器缓存中是否有…如果到bootstrap中都没有，则自顶向下尝试加载。如果最后谁都没加载，则抛出异常：ClassNotFoundException。使用双亲委派机制是为了安全。
（2）lazyloading：懒加载，大多数jvm都是使用该类是才初始化。JVM规范没有规定何时加载。
但是严格规定了什么时候必须初始化:
new getstatic putstatic invokestatic指令，访问final变量除外
java.lang.reflect对类进行反射调用时
初始化子类的时候，父类首先初始化
虚拟机启动时，被执行的主类必须初始化
动态语言支持java.lang.invoke.MethodHandle解析的结果为REF_getstatic REF_putstatic REF_invokestatic的方法句柄时，该类必须初始化